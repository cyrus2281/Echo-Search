// Text generated by ChatGPT by OPenAI
const originalText = `
As a programmer at a small software development company, Emily was 
determined to ensure the reliability and stability of the node.js application 
she was working on. She spent a morning writing thorough unit tests for a new 
feature she had implemented, covering all possible scenarios and edge cases. 
As she ran each test and saw the code coverage increase, she felt a sense of 
accomplishment. With all of the tests passing, Emily pushed her changes to the 
development branch and opened a pull request for review. Her lead developer 
approved of the thorough testing, and the rest of the team offered their 
congratulations. Emily was grateful for the peace of mind that came with knowing 
her code was well-tested and reliable.
`;

const simpleReplaceText = `
As a programmer at a small software development company, ðŸ§ª was 
determined to ensure the reliability and stability of the node.js application 
she was working on. She spent a morning writing thorough unit tests for a new 
feature she had implemented, covering all possible scenarios and edge cases. 
As she ran each test and saw the code coverage increase, she felt a sense of 
accomplishment. With all of the tests passing, ðŸ§ª pushed her changes to the 
development branch and opened a pull request for review. Her lead developer 
approved of the thorough testing, and the rest of the team offered their 
congratulations. ðŸ§ª was grateful for the peace of mind that came with knowing 
her code was well-tested and reliable.
`;

const partialReplacedText = `
As a programmer at a small ðŸ§ªware development company, Emily was 
determined to ensure the reliability and stability of the node.js application 
she was working on. She spent a morning writing thorough unit tests for a new 
feature she had implemented, covering all possible scenarios and edge cases. 
As she ran each test and saw the code coverage increase, she felt a sense of 
accomplishment. With all of the tests passing, Emily pushed her changes to the 
development branch and opened a pull request for review. Her lead developer 
approved of the thorough testing, and the rest of the team offered their 
congratulations. Emily was grateful for the peace of mind that came with knowing 
her code was well-tested and reliable.
`;

const multiLineReplacedText = `ðŸ§ªat a small software development company, Emily was 
determined to ensure the reliability and stability of the node.js application 
she was working on. She spent a morning writing thorough unit tests for a new 
feature she had implemented, covering all possible scenarios and edge cases. 
As she ran each test and saw the code coverage increase, she felt a sense of 
accomplishment. With all of the tests passing, Emily pushed her changes to the 
development branch and opened a pull request for review. Her lead developer 
approved of the thorough testing, and the rest of the team offered their 
congratulations. Emily was grateful for the peace of mind that came with knowing 
her code was well-tested and reliable.
`;

const caseSensitiveText = `
As a programmer at a small software development company, Emily was 
determined to ensure the reliability and stability of the node.js application 
she was working on. She spent a morning writing thorough unit tests for a new 
feature she had implemented, covering all possible scenarios and edge cases. 
As she ran each test and saw the code coverage increase, she felt a sense of 
accomplishment. ðŸ§ª all of the tests passing, Emily pushed her changes to the 
development branch and opened a pull request for review. Her lead developer 
approved of the thorough testing, and the rest of the team offered their 
congratulations. Emily was grateful for the peace of mind that came with knowing 
her code was well-tested and reliable.
`;

const caseInsensitiveText = `
As a programmer at a small software development company, Emily was 
determined to ensure the reliability and stability of the node.js application 
she was working on. She spent a morning writing thorough unit tests for a new 
feature she had implemented, covering all possible scenarios and edge cases. 
As she ran each test and saw the code coverage increase, she felt a sense of 
accomplishment. ðŸ§ª all of the tests passing, Emily pushed her changes to the 
development branch and opened a pull request for review. Her lead developer 
approved of the thorough testing, and the rest of the team offered their 
congratulations. Emily was grateful for the peace of mind that came ðŸ§ª knowing 
her code was well-tested and reliable.
`;

const nonGlobalReplaceText = `
As a programmer at a small software development company, ðŸ§ª was 
determined to ensure the reliability and stability of the node.js application 
she was working on. She spent a morning writing thorough unit tests for a new 
feature she had implemented, covering all possible scenarios and edge cases. 
As she ran each test and saw the code coverage increase, she felt a sense of 
accomplishment. With all of the tests passing, Emily pushed her changes to the 
development branch and opened a pull request for review. Her lead developer 
approved of the thorough testing, and the rest of the team offered their 
congratulations. Emily was grateful for the peace of mind that came with knowing 
her code was well-tested and reliable.
`;

const regexReplaceText = `
As a programmer at a small software development company, Emily was 
determined to ensure the reliability and stability of the node.js application 
she was working on. She spent a morning writing thorough unit ðŸ§ª for a new 
feature she had implemented, covering all possible scenarios and edge cases. 
As she ran each ðŸ§ª and saw the code coverage increase, she felt a sense of 
accomplishment. With all of the ðŸ§ª passing, Emily pushed her changes to the 
development branch and opened a pull request for review. Her lead developer 
approved of the thorough ðŸ§ª, and the rest of the team offered their 
congratulations. Emily was grateful for the peace of mind that came with knowing 
her code was well-ðŸ§ª and reliable.
`;

const searchQuery = "Emily";
const partialQuery = "soft";
const multiLineSearchQuery = "\nAs a programmer ";
const caseSensitiveQuery = "With";
const regexQuery = "t.?st[a-z]*";
const fileNameComplete = "file1.txt";
const fileNamePartial = "file";
const fileNameCompleteCIS = "FILE1.txt";
const filenameRegex = "file[0-4].*";
const filenameRegexCS = "File[0-4].*";
const filenameRegexCIS = "FILE[0-4].*";

const replacementText = "ðŸ§ª";

module.exports = {
  // test
  originalText,
  simpleReplaceText,
  partialReplacedText,
  multiLineReplacedText,
  caseSensitiveText,
  caseInsensitiveText,
  nonGlobalReplaceText,
  regexReplaceText,
  // query
  searchQuery,
  partialQuery,
  multiLineSearchQuery,
  caseSensitiveQuery,
  regexQuery,
  // replacement
  replacementText,
  // file name
  fileNameComplete,
  fileNamePartial,
  fileNameCompleteCIS,
  filenameRegex,
  filenameRegexCS,
  filenameRegexCIS,
};
